{"version":3,"sources":["images/Trandoshan.PNG","images/yoda.jpg","images/Hutt.jpg","images/Ewok.PNG","images/Gungan.PNG","images/MonCalamari.PNG","images/Neimodian.PNG","images/Sullustan.PNG","images/Toydarian.PNG","images/Dug.PNG","components/resultTem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","resultTem","Username","Name","Language","Classification","Designation","Eyes","Hair","Height","img","reset","className","src","onClick","App","getData","a","async","fetch","species","json","data","hut","results","push","this","setState","state","name","age","height","hairColor","eyeColor","result","handleChange","bind","handleSubmit","resetSelection","event","preventDefault","target","value","type","checked","Hutt","Sullustan","Neimodian","Trandoshan","Gungan","MonCalamari","Yoda","Dug","Ewok","Toydarian","alert","undefined","required","placeholder","onChange","selected","id","language","classification","designation","eye_colors","hair_colors","average_height","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a744038f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Trandoshan.96fff2bf.PNG\";","module.exports = __webpack_public_path__ + \"static/media/yoda.add64530.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Hutt.03c9f531.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ewok.8e26cbbb.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Gungan.eb9d5331.PNG\";","module.exports = __webpack_public_path__ + \"static/media/MonCalamari.1fb3d2a3.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Neimodian.987b962f.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Sullustan.7ab51776.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Toydarian.c8fcb77f.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Dug.4a6b6322.PNG\";","import React from 'react'\r\nimport '../App.css';\r\n\r\nconst resultTem = ({\r\n    Username, \r\n    Name,\r\n    Language,\r\n    Classification ,\r\n    Designation ,\r\n    Eyes, Hair,\r\n    Height,\r\n    img ,\r\n    reset\r\n}) => (\r\n\r\n<div className=\"result-wrapper\">\r\n                <div>\r\n                    <h1>Hey {Username}! </h1>\r\n                    <p>Looks like your a {Name}</p>\r\n                    <img src={img}></img>\r\n                    </div>\r\n                    \r\n                    <div className=\"resultDiv2\">\r\n                            <h2>{Name}</h2>\r\n                            <p>Language: {Language}</p>\r\n                            <p>Classification: {Classification}</p>\r\n                            <p>Designation: {Designation}</p>\r\n                            <p>Eyes: {Eyes}</p>\r\n                            <p>Hair: {Hair}</p>\r\n                            <p>Height: {Height}cm</p>\r\n                            \r\n                            <button onClick={reset}>try again?</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n)\r\n\r\nexport default resultTem;","import React, {Component} from 'react';\nimport './App.css'\nimport ResultTem from './components/resultTem'\n\n//import images for results section\nimport Hutt from './images/Hutt.jpg'\nimport Ewok from './images/Ewok.PNG'\nimport Gungan from './images/Gungan.PNG'\nimport MonCalamari from './images/MonCalamari.PNG'\nimport Neimodian from './images/Neimodian.PNG'\nimport Sullustan from './images/Sullustan.PNG'\nimport Toydarian from './images/Toydarian.PNG'\nimport Trandoshan from './images/Trandoshan.PNG'\nimport Yoda from './images/yoda.jpg'\nimport Dug from './images/Dug.PNG'\n\n//set state presets so user can click submit immeditly and bind 'this' so fuctions work.\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            species: [],\n            name: \"Luke Skywalker\",\n            age: \"young\",\n            height: \"short\",\n            hairColor: \"blue\",\n            eyeColor: \"blonde\",\n            result: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.resetSelection = this.resetSelection.bind(this);\n    }\n\n    //function to fetch user data from starwars api and set as state\n    getData = async function(){\n        const species = await fetch('https://swapi.co/api/species/');\n        const data = await species.json();\n        const hut = data.results[0];\n        data.results.push(hut);\n        this.setState({species: data.results})\n    }\n\n    componentDidMount(){\n        this.getData();\n    }\n\n    //handle change for form inputs, setState as value\n    handleChange(event) {\n        event.preventDefault();\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        })\n\n        \n    }\n    //set result based on form data and if statments\n    handleSubmit(event) {\n        event.preventDefault();\n        const state = this.state;\n        if (state.name && state.age && state.height && state.hairColor && state.eyeColor){\n            if (state.height === \"tall\"){\n                if (state.age === \"ancient\"){\n                    if (state.eyeColor === \"yellow\" || state.eyeColor === \"red\" || state.eyeColor === \"green\" || state.eyeColor === \"orange\" ){\n                        this.setState({result: 10});\n                        this.setState({img: Hutt});\n                    } else {\n                        this.setState({result: 5});\n                        this.setState({img: Sullustan});\n                    }\n                }\n                if (state.age === \"old\"){\n                    if (state.eyeColor === \"red\" || state.eyeColor === \"pink\" || state.eyeColor === \"brown\" || state.eyeColor === \"black\" ){\n                        this.setState({result: 6});\n                        this.setState({img: Neimodian});\n                    } else {\n                        this.setState({result: 2});\n                        this.setState({img: Trandoshan});\n                    }\n                }\n                if (state.age === \"young\"){\n                    if (state.eyeColor === \"red\" || state.eyeColor === \"orange\" || state.eyeColor === \"brown\" || state.eyeColor === \"black\" || state.eyeColor === \"blue\"   ){\n                        this.setState({result: 7});\n                        this.setState({img: Gungan});\n                    } else {\n                        this.setState({result: 2});\n                        this.setState({img: Trandoshan});\n                    }\n                }\n            }\n            else if (state.height == \"short\"){\n                \n                if (state.age === \"ancient\"){\n                    if (state.eyeColor === \"yellow\" || state.eyeColor === \"orange\" || state.eyeColor === \"red\" || state.eyeColor === \"green\"){\n                        this.setState({result: 3});\n                        this.setState({img: MonCalamari});\n                    } else {\n                        this.setState({result: 1});\n                        this.setState({img: Yoda});\n                    }\n                }\n                if (state.age === \"old\"){\n                    if (state.eyeColor === \"yellow\" || state.eyeColor === \"blue\" || state.eyeColor === \"pink\" || state.eyeColor === \"green\"){\n                        this.setState({result: 9});\n                        this.setState({img: Dug});\n                    } else {\n                        this.setState({result: 4});\n                        this.setState({img: Ewok});\n                    }\n                }\n                if (state.age === \"young\"){\n                    if (state.eyeColor === \"yellow\" || state.eyeColor === \"blue\" || state.eyeColor === \"brown\" || state.eyeColor === \"green\"){\n                        this.setState({result: 8});\n                        this.setState({img: Toydarian});\n                    } else {\n                        this.setState({result: 1});\n                        this.setState({img: Yoda});\n                    }\n                }\n            }\n               \n        } else {\n            //show alert if data is not filled out yet submit is clicked\n            alert(\"Please select all options\")\n        }\n    }\n\n    //reset state for try again btn\n    resetSelection() {\n        this.setState({result: undefined})\n    }\n    \n    \n    render(){\n        //if api data loaded and form has not been completed show quiz section\n        if (this.state.species && !this.state.result) {\n            return(\n                //quiz section\n                <div className='wrapper'>\n                    <h1>Which Star Wars Species Are you??</h1>\n                    <form>\n                        <label>\n                            Name:\n                            <input required type=\"text\" name=\"name\" placeholder=\"Luke Skywalker\"  onChange={this.handleChange}/>\n                        </label>\n\n                    <div className=\"optionSection\">\n                        Age:\n                            <div className=\"btnDiv\">\n                                <button  name={\"age\"} value=\"young\" onClick={this.handleChange} className={this.state.age === \"young\" ? \"active\" : undefined}>young</button>\n                                <button  name={\"age\"} value=\"old\" onClick={this.handleChange} className={this.state.age === \"old\" ? \"active\" : undefined}>old</button>\n                                <button  name={\"age\"} value=\"ancient\" onClick={this.handleChange} className={this.state.age === \"ancient\" ? \"active\" : undefined}>ancient</button>\n                            </div>\n                    </div>            \n                    <div className=\"optionSection\">        \n                        \n                            Height:\n                            <div className=\"btnDiv\">\n                                <button name={\"height\"} value=\"tall\"  onClick={this.handleChange} className={this.state.height === \"tall\" ? \"active\" : undefined}>tall</button>\n                                <button  name={\"height\"} value=\"short\"  onClick={this.handleChange} className={this.state.height === \"short\" ? \"active\" : undefined}>short</button>\n                            </div>\n                    </div>  \n\n                        <label>\n                        Eye Color:\n                            <select required name={\"eyeColor\"} value={this.state.value} onChange={this.handleChange}>\n                            \n                                <option value=\"yellow\">Yellow</option>\n                                <option value=\"orange\">Orange</option>\n                                <option value=\"green\">Green</option>\n                                <option selected value=\"blue\">Blue</option>\n                                <option value=\"pink\">Pink</option>\n                                <option value=\"red\">Red</option>\n                                <option value=\"brown\">Brown</option>\n                                <option value=\"black\">Black</option>\n                            </select>\n                        </label>\n\n                        <label>\n                        Hair Color:\n                            <select required name={\"hairColor\"} value={this.state.value} onChange={this.handleChange}>\n                                <option value=\"white\">White/Grey</option>\n                                <option selected value=\"white\">Blonde</option>\n                                <option value=\"red\">Red/Orange</option>\n                                <option value=\"brown\">Brown</option>\n                                <option value=\"black\">Black</option>\n                            </select>\n                        </label>\n                        <input id=\"input_btn\" type=\"submit\" value=\"Submit\" onClick={this.handleSubmit} />\n\n                    </form>\n                </div>\n            )\n        } else if (this.state.result) {\n           // otherwise, if form is complete and there is a result, show results section. \n            return(\n                <ResultTem \n                    Username={this.state.name} \n                    Name={this.state.species[this.state.result].name}\n                    Language={this.state.species[this.state.result].language} \n                    Classification={this.state.species[this.state.result].classification} \n                    Designation={this.state.species[this.state.result].designation} \n                    Eyes={this.state.species[this.state.result].eye_colors} \n                    Hair={this.state.species[this.state.result].hair_colors} \n                    Height={this.state.species[this.state.result].average_height} \n                    img={this.state.img} \n                    reset={this.resetSelection}>\n                 </ResultTem>\n            )\n        } else {\n            // otherwise show loading section\n            return(\n                    <div className='wrapper'>\n                        <h1 className=\"c1 f1\">Which Star Wars Species Are you??</h1>\n                        <div>loading...</div>     \n                    </div> \n                )\n        }\n\n        }\n    } \n    \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}